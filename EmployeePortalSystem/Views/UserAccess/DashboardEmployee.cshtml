@{
    ViewData["Title"] = "Dashboard-Admin";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}
@model EmployeePortalSystem.ViewModels.DashboardCardViewModel



<div class="container">
    <div class="dashboard-contents">
        <div class="hero_section">
            <div class="number_card">
                <div class="card1">
                    <div class="card1_left">
                        <img src="~/img/trophy.png" />
                    </div>
                    <div class="card1_right">
                        <h6>Total Awards</h6>
                        <h1>@Model.TotalAwards</h1>
                    </div>
                </div>
                <div class="card2">
                    <div class="card2_left">
                        <img src="~/img/write.png" />
                    </div>
                    <div class="card2_right">
                        <h6>Blogs Written</h6>
                        <h1>@Model.BlogsWritten</h1>
                    </div>
                </div>
                <div class="card3">
                    <div class="card3_left">
                        <img src="~/img/employee.png" />
                    </div>
                    <div class="card3_right">
                        <h6>Polls Votted</h6>
                        <h1>@Model.PollsVoted</h1>
                    </div>
                </div>
            </div>
        </div>

        <div class="policy_card">


            <div class="motor_card_box">
                <div class="motor_text">
                    <h2 style="font-weight: bold; font-size: 20px;">Activity Contribution</h2>
                </div>
                <div class="chart-container" style="position: relative; width:100%; max-width: 300px; margin: auto;">
                    <canvas id="mychart1" style="width:100%; height:auto;"></canvas>
                </div>
            </div>
            <div class="motor_card_box">
                <h2 style="font-weight: bold; font-size: 20px;">Current Month Overview</h2>
                <div class="chart-container">
                    <canvas id="mychart" style="width:100%; height: 100%;"></canvas>
                </div>
            </div>
        </div>

        @if (Model.LatestAnnouncements != null && Model.LatestAnnouncements.Any())
        {
            <div class="dashboard-card">
                <div class="details">
                <h3>Latest Announcements</h3>
                </div>
                <div class="announcement-list-row">
                    @foreach (var ann in Model.LatestAnnouncements)
                    {
                        <div class="announcement-box">
                            <strong class="announcement-title">@ann.Title</strong>
                            <p class="announcement-message">@ann.Message</p>
                        </div>
                    }
                </div>
                <div class="text-end mt-2">
                    <a href="@Url.Action("EmployeeAnnouncement", "Announcement")" class="btn btn-secondary btn-sm">View All Announcements</a>
                </div>
            </div>
        }

        @if (Model.LatestAwards != null && Model.LatestAwards.Any())
        {
            <div class="dashboard-card">
                <div class="details">
                <h3>New Awards</h3>
                </div>
                <div class="announcement-list-row">
                    @foreach (var award in Model.LatestAwards)
                    {
                        <div class="announcement-box">
                            <div class="award-logo">
                                <!-- Recipient Photo -->
                                @if (!string.IsNullOrEmpty(award.RecipientPhoto))
                                {
                                    <img src="~/uploads/@award.RecipientPhoto" class="blog-float-image" alt="Recipient Photo" />
                                }
                                else
                                {
                                    <img src="~/img/avatar_11852100.png" class="blog-float-image" alt="Profile image" />
                                }
                            </div>
                            <!-- Award Type -->
                            <h3 class="blog-title">@award.Type</h3>

                            <!-- Award Details -->
                            <p class="blog-description">
                                @award.Description<br /><br />
                                <strong>Event Date:</strong> @award.EventDate?.ToString("dd MMM yyyy")<br />
                                <strong>Recipient:</strong> @award.RecipientName<br />
                                <strong>Given By:</strong> @award.GivenBy<br />

                            </p>
                        </div>
                    }
                </div>
                <div class="text-end mt-2">
                    <a href="@Url.Action("EmployeeAwardList","Award")" class="btn btn-secondary btn-sm">View All Awards</a>
                </div>
            </div>
        }

        <!-- Blog and Polls card -->
        <div class="table_card">
            <!-- First Table -->
            <div class="motor_card_box">
                <div class="details">
                    <div class="details-header">
                        <h3>Latest Blogs</h3>
                    </div>
                    <div class="table-responsive">

                        <div class="blog-poll">
                            @foreach (var blog in Model.LatestBlogs)
                            {
                                <div class="blog-card-content">
                                    @if (!string.IsNullOrEmpty(blog.Image))
                                    {
                                        <img src="~/uploads/@blog.Image" class="blog-float-image1" alt="Blog Image" />
                                    }

                                    <div class="blog-card-text">
                                        <h4 class="blog-title">@blog.Title</h4>

                                        <p class="blog-description">
                                            @blog.Content.Substring(0, Math.Min(blog.Content.Length, 180))...
                                        </p>

                                        <div class="blog-meta">
                                            <span class="blog-author">By @blog.AuthorName</span>
                                            <span class="blog-tags">on @blog.CreatedAt.ToString("dd MMM yyyy")</span>
                                        </div>

                                        <!-- Bloglike nd comment -->
                                        <div class="blog-actions">
                                            @*     <form method="post" asp-controller="Blogs" asp-action="ToggleLike"> *@

                                            @*     <input type="hidden" name="blogId" value="@blog.BlogId" /> *@
                                            @*         <input type="hidden" name="returnTo" value="Profile" /> *@
                                            @*     <button class="like-button" type="submit"> *@
                                            @*         <div class="like-content"> *@
                                            @*             <img src="~/img/heartfilled.png" alt="Like" width="20px" height="20px" /> *@
                                            @*             <span>@blog.LikeCount</span> *@
                                            @*         </div> *@
                                            @*     </button> *@
                                            @* </form> *@

                                            <button type="button" class="like-button" onclick="toggleLike(@blog.BlogId, this, 'profile')">
                                                <div class="like-content">
                                                    <img src="~/img/heartfilled.png" width="20px" height="20px" />
                                                    <span>@blog.LikeCount</span>
                                                </div>
                                            </button>


                                            <button type="button" class="comment-btn" onclick="toggleCommentSection(@blog.BlogId)">
                                                <div class="comment-content">
                                                    <img src="~/img/bubble-chat.png" alt="Comment" width="20px" height="20px" />
                                                    <span>Comments @blog.Comments.Count</span>
                                                </div>
                                            </button>
                                        </div>

                                        <div id="comment-section-@blog.BlogId" class="comment-section" style="display: none; margin-top: 10px;">
                                            <div class="existing-comments">
                                                @foreach (var comment in blog.Comments)
                                                {
                                                    <div class="comment">
                                                        <span>@comment.EmployeeName</span>: @comment.CommentText
                                                    </div>
                                                }
                                            </div>

                                            @* <form class="comment-text" asp-controller="Blogs" asp-action="PostComment" method="post"> *@
                                            @*     <input type="hidden" name="blogId" value="@blog.BlogId" /> *@
                                            @*         <input type="hidden" name="returnTo" value="Profile" /> *@
                                            @*     <input name="commentText" placeholder="Write your comment..." required> *@
                                            @*     <button type="submit">Post</button> *@
                                            @* </form> *@

                                            <form class="comment-text" onsubmit="return submitComment(@blog.BlogId, this)">
                                                <input type="text" name="commentText" placeholder="Write your comment..." required>
                                                <button type="submit">Post</button>
                                            </form>

                                        </div>

                                    </div>
                                </div>
                                <br /> <hr />

                                <br />
                            }
                            <div class="text-end mt-2">
                                <a href="@Url.Action("EmployeeBlogDetails", "Blogs")" class="btn btn-secondary btn-sm">View All Blogs</a>
                            </div>

                        </div>





                    </div>
                </div>
            </div>

            <!-- Second Table -->
            <div class="motor_card_box">
                <div class="details">
                    <div class="details-header">
                        <h3>Active Polls</h3>
                    </div>
                    <div class="table-responsive mt-4">
                        <div class="blog-poll">
                            
                            @{
                                var selectedOptions = ViewBag.SelectedOptions as Dictionary<int, string>;
                                int currentEmpId = ViewBag.CurrentEmployeeId != null ? (int)ViewBag.CurrentEmployeeId : 0;
                            }

                            @foreach (var poll in Model.LatestPolls)
                            {
                                var isVotedPoll = selectedOptions != null && selectedOptions.ContainsKey(poll.PollId);
                                var selectedOption = isVotedPoll ? selectedOptions[poll.PollId] : null;
                                var optionTexts = new[] { poll.Option1, poll.Option2, poll.Option3, poll.Option4 };

                                <div class="blog-card-content" style="margin-bottom: 30px;">
                                    <div class="blog-card-text">
                                        <h5 class="blog-title">@poll.Question</h5>

                                        <form asp-controller="Polls" asp-action="VoteFromList" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="pollId" value="@poll.PollId" />
                                            <input type="hidden" name="returnTo" value="DashboardEmployee" />


                                            @for (int i = 0; i < optionTexts.Length; i++)
                                            {
                                                var optionValue = (i + 1).ToString();
                                                var optionText = optionTexts[i];

                                                if (!string.IsNullOrEmpty(optionText))
                                                {
                                                    var isSelected = selectedOption == optionValue;

                                                    <div style="margin-bottom: 6px;">
                                                        <input type="radio"
                                                               name="selectedOption"
                                                               value="@optionValue"
                                                        @(isSelected ? "checked" : "")
                                                        @(isVotedPoll ? "disabled" : "")
                                                               style="accent-color: @(isSelected ? "green" : "#999"); margin-right: 6px;" />
                                                        <label>@optionText</label>
                                                    </div>
                                                }
                                            }

                                            <div class="blog-meta" style="margin-top: 5px; font-size: 12px;">
                                                <span>By @poll.CreatedByName • @poll.CreatedAt.ToString("dd MMM yyyy")</span>
                                            </div>

                                            <div class="blog-actions" style="margin-top: 10px;">
                                                <div class="like-content" style="display: flex; align-items: center; gap: 15px;">
                                                    @if (!isVotedPoll)
                                                    {
                                                        <button type="submit" class="pollbtn btn btn-success btn-sm">🗳 Submit Vote</button>
                                                    }
                                                    else
                                                    {
                                                        <span style="color: green; font-weight: 500;">✅ You already voted</span>
                                                    }

                                                    <a asp-controller="Polls" asp-action="EmployeeResults" asp-route-id="@poll.PollId" class="btn btn-outline-secondary btn-sm">
                                                        📊 View Results
                                                    </a>

                                                    @* @if (poll.CreatedBy == currentEmpId) *@
                                                    @* { *@
                                                    @*     <a asp-controller="Polls" *@
                                                    @*        asp-action="Delete" *@
                                                    @*        asp-route-id="@poll.PollId" *@
                                                    @*        asp-route-returnTo="DashboardEmployee" *@
                                                    @*        title="Delete Poll"> *@
                                                    @*         <img src="~/img/trash-xmark (1).png" width="15px" height="15px" /> *@
                                                    @*     </a> *@
                                                    @* } *@
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                 <hr />

                                <br />
                            }

                            <div class="text-end mt-2">
                                <a href="@Url.Action("EmployeePollDetails", "Polls")" class="btn btn-secondary btn-sm">View All Polls</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        
            @section Scripts {
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

                <script>
                    const ctx1 = document.getElementById('mychart1').getContext('2d');

                    const activityData1 = {
                        labels: [
                    @foreach (var item in Model.ContributionChartData.Keys)
                    {
                        @Html.Raw($"'{item}',")
                    }
                        ],
                        datasets: [{
                            label: 'Activity',
                            data: [
                    @foreach (var value in Model.ContributionChartData.Values)
                    {
                        @Html.Raw($"{value},")
                    }
                            ],
                            backgroundColor: ['#1bc9f2', '#df0052', '#ff6c03'],
                            hoverOffset: 10
                        }]
                    };

                    new Chart(ctx1, {
                        type: 'doughnut',
                        data: activityData1,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        boxWidth: 14,
                                        font: {
                                            size: 15
                                        }
                                    }
                                }
                            }
                        }
                    });

                    const ctx = document.getElementById('mychart').getContext('2d');

                        const monthlyData = {
                        labels: [
                        @foreach (var item in Model.MonthlyContributionData.Keys)
                        {
                            @Html.Raw($"'{item}',")
                        }
                        ],
                        datasets: [{
                        label: 'Monthly Activity',
                        data: [
                        @foreach (var value in Model.MonthlyContributionData.Values)
                        {
                            @Html.Raw($"{value},")
                        }
                        ],
                        backgroundColor: ['#1bc9f2', '#df0052', '#ff6c03'],
                        }]
                        };

                        new Chart(ctx, {
                        type: 'bar',
                        data: monthlyData,
                        options: {
                        responsive: true,
                        scales: {
                        y: {
                        beginAtZero: true
                        },
                        x: {
                            ticks: {
                            callback: function(value, index, values) {
                            const labelMap = {
                            'Blogs': 'Blogs Written',
                            'Polls': 'Polls Voted',
                            'Awards': 'Awards'
                            };
                            return labelMap[this.getLabelForValue(value)] || this.getLabelForValue(value);
                            }
                            }
                            }
                        },
                        plugins: {
                            legend: {
                            display: false 
                            }
                            }
                        }
                        });
                </script>
            }


           
       

        
      



       

        <!-- Edit Modal -->
        <div id="edit-modal" class="modal">
            <h2>Edit Policy Details</h2>
            <form>
                <label>Quotation:</label>
                <input type="text" id="quotation" name="quotation" />

                <label>Policy Issue:</label>
                <input type="date" id="policyIssue" name="policyIssue" />

                <label>Policy End:</label>
                <input type="date" id="policyEnd" name="policyEnd" />

                <label>Status:</label>
                <input type="text" id="status" name="status" />

                <button type="submit" class="submit-button">Submit</button>
                <button type="button" id="cancel-button">Cancel</button>
            </form>
        </div>

        <script>
            let selectedRow = null;
            document.querySelectorAll('.edit-icon').forEach(icon => {
                icon.addEventListener('click', function () {
                    selectedRow = this.closest('tr');
                    const cells = selectedRow.querySelectorAll('td');
                    document.getElementById('quotation').value = cells[1].innerText;
                    document.getElementById('policyIssue').value = cells[2].innerText;
                    document.getElementById('policyEnd').value = cells[3].innerText;
                    document.getElementById('status').value = cells[4].innerText;
                    document.getElementById('edit-modal').style.display = 'block';
                });
            });

            document.querySelector('.submit-button').addEventListener('click', function (event) {
                event.preventDefault();
                if (selectedRow) {
                    const cells = selectedRow.querySelectorAll('td');
                    cells[1].innerText = document.getElementById('quotation').value;
                    cells[2].innerText = document.getElementById('policyIssue').value;
                    cells[3].innerText = document.getElementById('policyEnd').value;
                    cells[4].innerText = document.getElementById('status').value;
                }
                document.getElementById('edit-modal').style.display = 'none';
            });

            document.getElementById('cancel-button').addEventListener('click', function () {
                document.getElementById('edit-modal').style.display = 'none';
            });
        </script>
    </div>
</div>


