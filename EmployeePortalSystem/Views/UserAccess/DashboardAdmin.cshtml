@{
    ViewData["Title"] = "Dashboard-Admin";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}
@model EmployeePortalSystem.ViewModels.DashboardCardViewModel

@{
    var dashboard = Context.Session.GetString("CurrentDashboard");
}


<div class="container">
    <div class="dashboard-contents">

        

        <!-- Announcement Section -->

        @if (Model.LatestAnnouncements != null && Model.LatestAnnouncements.Any())
        {
            <div class="dashboard-card">
                <div class="details">
                <h3>Latest Announcements</h3>
                </div>
                <div class="announcement-list-row">
                    @foreach (var ann in Model.LatestAnnouncements)
                    {
                        <div class="announcement-box">
                            <strong class="announcement-title">@ann.Title</strong>
                            <p class="announcement-message">@ann.Message</p>
                        </div>
                    }
                </div>
                <div class="text-end mt-2">
                    <a href="@Url.Action("Index", "Announcement")" class="button-81" role="button">View All Announcements</a>
                </div>
            </div>
        }


        <!-- Award Section -->
        @if (Model.LatestAwards != null && Model.LatestAwards.Any())
        {
            <div class="dashboard-card">
                <div class="details">
                <h3>New Awards</h3>
                </div>
                <div class="announcement-list-row">
                    @foreach (var award in Model.LatestAwards)
                    {
                        <div class="announcement-box">
                            <div class="award-logo">
                                <!-- Recipient Photo -->
                                @if (!string.IsNullOrEmpty(award.RecipientPhoto))
                                {
                                    <img src="~/uploads/@award.RecipientPhoto" class="blog-float-image" alt="Recipient Photo" />
                                }
                                else
                                {
                                    <img src="~/img/avatar_11852100.png" class="blog-float-image" alt="Profile image" />
                                }
                            </div>
                            <!-- Award Type -->
                            <h3 class="blog-title">@award.Type</h3>

                            <!-- Award Details -->
                            <p class="blog-description">
                                @award.Description<br /><br />
                                <strong>Event Date:</strong> @award.EventDate?.ToString("dd MMM yyyy")<br />
                                <strong>Recipient:</strong> @award.RecipientName<br />
                                <strong>Given By:</strong> @award.GivenBy<br />

                            </p>
                        </div>
                    }
                </div>
                <div class="text-end mt-2">
                    <a href="@Url.Action("Index", "Award")" class="button-81" role="button">View All Awards</a>
                </div>
            </div>
        }

        <div class="table_card">
            <!-- First Table -->
            <div class="motor_card_box">
                <div class="details">
                    <div class="details-header">
                        <h3>Latest Blogs</h3>
                    </div>
                    <div class="table-responsive">
                        <div class="blog-poll">
                            @foreach (var blog in Model.LatestBlogs)
                            {
                                <div class="blog-card-content">
                                    @if (!string.IsNullOrEmpty(blog.Image))
                                    {
                                        <img src="~/uploads/@blog.Image" class="blog-float-image1" alt="Blog Image" />
                                    }

                                    <div class="blog-card-text">
                                        <h4 class="blog-title">@blog.Title</h4>

                                        <p class="blog-description">
                                            @blog.Content.Substring(0, Math.Min(blog.Content.Length, 150))...
                                        </p>

                                        <div class="blog-meta">
                                            <span class="blog-author">By @blog.AuthorName</span>
                                            <span class="blog-tags">on @blog.CreatedAt.ToString("dd MMM yyyy")</span>
                                        </div>

                                        <!-- Like & Comment -->
                                        <div class="blog-actions">
                                            <div class="like-content">
                                                <img src="~/img/heartfilled.png" alt="Like" width="20px" height="20px" />
                                                <span>@blog.LikeCount</span>
                                            </div>


                                            <button type="button" class="comment-btn" onclick="toggleCommentSection(@blog.BlogId)">
                                                <div class="comment-content">
                                                    <img src="~/img/bubble-chat.png" alt="Comment" width="20px" height="20px" />
                                                    <span>Comments @blog.Comments.Count</span>
                                                </div>
                                            </button>
                                        </div>

                                        <!-- Comment Section Initially Hidden -->
                                        <div id="comment-section-@blog.BlogId" class="comment-section" style="display: none; margin-top: 10px;">

                                            <!-- Existing Comments -->
                                            <div class="existing-comments">
                                                @foreach (var comment in blog.Comments)
                                                {
                                                    <div class="comment" id="comment-@comment.CommentId">
                                                        <span>@comment.EmployeeName</span>: @comment.CommentText
                                                        @* <div class="comment-date">@comment.CreatedAt.ToString("dd MMM yyyy hh:mm tt")</div> *@
                                                        @if (dashboard == "Admin")
                                                        {
                                                            <a href="#" onclick="deleteComment(@comment.CommentId, @blog.BlogId); return false;" title="Delete Comment">
                                                                <img src="~/img/trash-xmark (1).png" width="12px" height="12px" style="margin-left: 20px;" />
                                                            </a>
                                                        }
                                                    </div>
                                                }
                                            </div>

                                        </div>
                                        <div class="blog-del">
                                            <a href="@Url.Action("BlogDelete", "Blogs", new { id = blog.BlogId })">
                                                <img src="~/img/trash-xmark (1).png" width="15px" height="15px" />
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <hr />

                                <br />
                            }
                            <div class="text-end mt-2">
                                <a href="@Url.Action("BlogDetails", "Blogs")" class="button-81" role="button">View All Blogs</a>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <!-- Second Table -->
            <div class="motor_card_box">
                <div class="details">
                    <div class="details-header">
                        <h3>Active Polls</h3>
                    </div>
                    @if (Model.LatestPolls != null && Model.LatestPolls.Count > 0)
                    {
                        <div class="table-responsive mt-4">
                            <div class="blog-poll">
                                @foreach (var poll in Model.LatestPolls)
                                {
                                    var result = ViewBag.Results != null && ViewBag.Results.ContainsKey(poll.PollId)
                                    ? (Dictionary<string, int>)ViewBag.Results[poll.PollId]
                                    : new Dictionary<string, int>();

                                    int totalVotes = result.Values.Sum();

                                    var options = new[]
                                    {
                            new { Key = "1", Text = poll.Option1 },
                            new { Key = "2", Text = poll.Option2 },
                            new { Key = "3", Text = poll.Option3 },
                            new { Key = "4", Text = poll.Option4 }
                            };

                                    <div class="blog-card-content" style="margin-bottom: 30px;">
                                        <div class="blog-card-text">
                                            <h5 class="blog-title">@poll.Question</h5>

                                            <div class="poll-options mt-2">
                                                @foreach (var option in options)
                                                {
                                                    if (!string.IsNullOrEmpty(option.Text))
                                                    {
                                                        var count = result.ContainsKey(option.Key) ? result[option.Key] : 0;
                                                        var percentage = totalVotes > 0 ? (count * 100 / totalVotes) : 0;

                                                        var fillClass = percentage switch
                                                        {
                                                            >= 75 => "fill-top",
                                                            >= 50 => "fill-high",
                                                            >= 25 => "fill-medium",
                                                            _ => "fill-low"
                                                        };

                                                        <div class="option-box">
                                                            <div class="option-label">
                                                                <span>@option.Text</span>
                                                                <span>@percentage% (@count vote@(count == 1 ? "" : "s"))</span>
                                                            </div>
                                                            <div class="progress-bar">
                                                                <div class="progress-fill @fillClass" style=" width: @percentage%; "></div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>

                                            <div class="blog-meta mt-2" style="font-size: 12px;">
                                                <span>By @poll.CreatedByName • @poll.CreatedAt.ToString("dd MMM yyyy")</span>
                                            </div>

                                            <div class="blog-actions mt-2">
                                                <div class="like-content d-flex gap-3 align-items-center">
                                                    <a asp-controller="Polls" asp-action="Results" asp-route-id="@poll.PollId" class="comment-btn">
                                                        📊 View Responses
                                                    </a>
                                                    <a asp-controller="Polls" asp-action="Delete" asp-route-id="@poll.PollId" asp-route-returnTo="DashboardAdmin" title="Delete Poll">
                                                        <img src="~/img/trash-xmark (1).png" width="15px" height="15px" />
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                    <br />
                                }

                                <div class="text-end mt-2">
                                    <a href="@Url.Action("PollDetails", "Polls")" class="button-81" role="button">View All Polls</a>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p>No recent polls available.</p>
                    }

                </div>
            </div>
        </div>

       

        <script>
            let selectedRow = null;
            document.querySelectorAll('.edit-icon').forEach(icon => {
                icon.addEventListener('click', function () {
                    selectedRow = this.closest('tr');
                    const cells = selectedRow.querySelectorAll('td');
                    document.getElementById('quotation').value = cells[1].innerText;
                    document.getElementById('policyIssue').value = cells[2].innerText;
                    document.getElementById('policyEnd').value = cells[3].innerText;
                    document.getElementById('status').value = cells[4].innerText;
                    document.getElementById('edit-modal').style.display = 'block';
                });
            });

            document.querySelector('.submit-button').addEventListener('click', function (event) {
                event.preventDefault();
                if (selectedRow) {
                    const cells = selectedRow.querySelectorAll('td');
                    cells[1].innerText = document.getElementById('quotation').value;
                    cells[2].innerText = document.getElementById('policyIssue').value;
                    cells[3].innerText = document.getElementById('policyEnd').value;
                    cells[4].innerText = document.getElementById('status').value;
                }
                document.getElementById('edit-modal').style.display = 'none';
            });

            document.getElementById('cancel-button').addEventListener('click', function () {
                document.getElementById('edit-modal').style.display = 'none';
            });
        </script>
    </div>
</div>

