@model EmployeePortalSystem.ViewModels.SupportTicketViewModel

@{
    ViewData["Title"] = "Edit Ticket";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}

<div class="container">
    <div class="page-contents">
        <div class="container_emp">
            <div class="emp_btn">
                <div class="left_btn">
                    <form method="get" asp-action="Index" asp-controller="SupportTicket">
                        <button type="submit" class="create_emp_btn">Back</button>
                    </form>
                </div>

            </div>
            <div class="emp_head">
                <h2>Edit Support Ticket</h2>
            </div>
        </div>

        <div class="container_emp mb-20">
            <div class="empmaster_card">
                <form asp-action="EditTicket" asp-controller="SupportTicket" method="post" class="emp_form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="TicketId" />

                    <div class="form_row">
                        <div class="form_group">
                            <label>Issue Title</label>
                            <div class="val">
                                <input asp-for="IssueTitle" class="form-control" readonly />
                            </div>
                        </div>
                        <div class="form_group">
                            <label>Description</label>
                            <div class="val">
                                <input asp-for="Description" class="form-control" rows="3" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="form_row">
                        <div class="form_group">
                            <label>Department<span class="imp_field">*</span></label>
                            <div class="val">
                                <select asp-for="DepartmentId"  class="form-control" id="departmentDropdown">
                                    <option value="">Select Department</option>
                                    @foreach (var dept in Model.DepartmentList)
                                    {
                                        <option value="@dept.Value">@dept.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form_group">
                            <label>Status<span class="imp_field">*</span></label>
                            <div class="val">
                                <select asp-for="Status"  class="form-control" id="statusDropdown">
                                    <option value="Open">Open</option>
                                    <option value="Assigned">Assigned</option>
                                    <option value="Escalated">Escalated</option>
                                    <option value="Resolved">Resolved</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form_row" id="assignRow" style="display:none;">
                        <div class="form_group">
                            <label>Assigned To <span class="imp_field">*</span></label>
                            <div class="val">
                                <select asp-for="AssignedTo" class="form-control" id="assignDropdown">
                                    <option value="">Select Employee</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form_row" id="escalateRow" style="display:none;">
                        <div class="form_group">
                            <label>Escalated To <span class="imp_field">*</span></label>
                            <div class="val">
                                <select asp-for="EscalationName"  class="form-control" id="escalateDropdown">
                                    <option value="">Select Senior</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form_row">
                        <div class="form_group">
                            <label>Response<span class="imp_field">*</span></label>
                            <div class="val">
                                <textarea asp-for="Response" class="form-control" rows="3"></textarea>

                            </div>
                        </div>
                    </div>

                    <div class="form_row">
                        <button type="submit" class="custom-button" id="submitBtn">Save</button>
                        <button type="reset" class="btn btn-warning">Cancel</button>
                    </div>

                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-success mt-3">@TempData["Message"]</div>
                    }
                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const allEmployees = @Html.Raw(Json.Serialize(Model.AllEmployees)); // [{name: "John", departmentId: 2}, ...]

        function filterEmployees(deptId) {
            const filtered = allEmployees.filter(e => e.departmentId == deptId);
            $('#assignDropdown, #escalateDropdown').empty().append('<option value="">Select</option>');
            filtered.forEach(e => {
                $('#assignDropdown').append(`<option value="${e.name}">${e.name}</option>`);
                $('#escalateDropdown').append(`<option value="${e.name}">${e.name}</option>`);
            });
        }

                $('#statusDropdown').on('change', function () {
            const status = $(this).val();

            if (status === 'Assigned') {
                $('#assignRow').show();
                $('#escalateRow').hide();
            } else if (status === 'Escalated') {
                $('#assignRow').hide();
                $('#escalateRow').show();
            } else {
                $('#assignRow, #escalateRow').hide();
            }

            // ✅ Always enable submit button
            $('#submitBtn').prop('disabled', false);
        });


        $('#departmentDropdown').on('change', function () {
            filterEmployees($(this).val());
        });

        // On page load: disable submit if status is Open
        $(document).ready(function () {
            $('#statusDropdown').trigger('change');
             
        });
    </script>
}
