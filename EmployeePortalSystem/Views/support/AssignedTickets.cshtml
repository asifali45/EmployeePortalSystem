@model List<EmployeePortalSystem.ViewModels.SupportTicketViewModel>

@{
    ViewData["Title"] = "Assigned Tickets";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}

<div class="container">
    <div class="page-contents">

        <div class="emp_btn">
            <div class="left_btn">
                <form method="get" asp-action="EmployeeTicket" asp-controller="SupportTicket">
                    <button type="submit" class="create_emp_btn">Back</button>
                </form>
            </div>
        </div>

        <div class="emp_head">
            <h2>Tickets Assigned</h2>
        </div>

        <div class="empmaster_card">

            <table class="table emp_table" id="assignedTicketsTable">

                <thead>
                    <tr>
                        <th>Ticket ID</th>
                        <th>Issue</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Resolved</th> 
                        <th>Action</th>   
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model)
                    {

                      <tr>
                        <form method="post" asp-action="UpdateResolution" asp-controller="SupportTicket">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="TicketId" value="@ticket.TicketId" />

                            <td>@ticket.TicketId</td>
                            <td>@ticket.IssueTitle</td>
                            <td>@ticket.Description</td>
                            <td>@ticket.Status</td>

                            <td>
                                

                               

                                <select name="Resolved" class="form-control1 resolved-dropdown"


                                        @(ticket.Resolved == "Closed" ? "disabled" : "")>
                                   


                                    <option value="Open" selected="@(ticket.Resolved == "Open" ? "selected" : null)" style="color: teal;">
                                        Open
                                    </option>

                                    <option value="In Progress" selected="@(ticket.Resolved == "In Progress" ? "selected" : null)" style="color: orange;">
                                        In Progress
                                    </option>

                                    <option value="Escalated" selected="@(ticket.Resolved == "Escalated" ? "selected" : null)" style="color: red;">
                                        Escalate
                                    </option>

                                    <option value="Closed" selected="@(ticket.Resolved == "Closed" ? "selected" : null)" style="color: green;">
                                        Closed
                                    </option>
                                </select>




                            </td>
                            <td>
                                <div class="form_row1">
                                    <button type="submit" class="custom-button1">Save</button>
                                </div>
                            </td>
                            </form>
                        </tr>
                        
                    }



                </tbody>
            </table>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#assignedTicketsTable').DataTable();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const selects = document.querySelectorAll('.resolved-dropdown');
            selects.forEach(function (select) {
                function updateColor() {
                    const selectedValue = select.value;
                    if (selectedValue === "Closed") {
                        select.style.color = 'red';
                    } else {
                        select.style.color = 'black'; // normal for others
                    }
                }

                // Initial check
                updateColor();

                // Update when selection changes
                select.addEventListener('change', updateColor);
            });
        });
    </script>



}
