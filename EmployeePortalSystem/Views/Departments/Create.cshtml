@model EmployeePortalSystem.Models.Department

@{
    ViewData["Title"] = "Create Department";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}

<div class="container">
    <div class="page-contents">

        <div class="container_emp">
            <div class="emp_head">
                <h3>Create Department</h3>
            </div>
        </div>

        <div class="container_emp mb-20">
            <div class="empmaster_card">
                <form asp-action="Create" asp-controller="Departments" method="post" class="emp_form">
                    <div class="form_row">
                        <div class="form_group">
                            <label>Department Name</label>
                            <input asp-for="Name" class="form-control" placeholder="Enter the Department Name here" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form_group">
                            <label>Description</label>
                            <input asp-for="Description" class="form-control" placeholder="Enter the description" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form_row">
                        <div class="form_group">
                            <label>Head Name</label>
                            <input type="text" id="headName" class="form-control" placeholder="Type to search Head Name" autocomplete="off" />
                            <input type="hidden" id="headId" name="HeadId" />
                            <div id="headSuggestions" style="border: 1px solid #ccc; display:none; position:absolute; background:white; z-index:1000;"></div>
                            <span asp-validation-for="HeadId" class="text-danger"></span>
                        </div>
                        <div class="form_group">
                            <label>Parent Department</label>
                            <select asp-for="ParentDepartmentId" asp-items="ViewBag.ParentDepartments" class="form-control">
                                <option value="">-- Select Parent Department --</option>
                            </select>
                            <span asp-validation-for="ParentDepartmentId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form_row">
                        <button type="submit" class="custom-button">Save</button>
                        <a asp-action="Index" class="custom-button">Cancel</a>
                    </div>

                    @if (TempData["Message"] != null)
                    {
                        <div class="alert-success">
                            @TempData["Message"]
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const headInput = document.getElementById("headName");
            const hiddenHeadId = document.getElementById("headId");
            const suggestionsBox = document.getElementById("headSuggestions");

            headInput.addEventListener("input", function () {
                const query = headInput.value.trim();
                if (query.length < 2) {
                    suggestionsBox.style.display = "none";
                    return;
                }

                fetch(`/Employees/SearchByName?term=${encodeURIComponent(query)}`)
                    .then(res => res.json())
                    .then(data => {
                        if (data.length === 0) {
                            suggestionsBox.style.display = "none";
                            return;
                        }

                        suggestionsBox.innerHTML = "";
                        data.forEach(emp => {
                            const option = document.createElement("div");
                            option.textContent = emp.name;
                            option.style.padding = "5px";
                            option.style.cursor = "pointer";
                            option.addEventListener("click", () => {
                                headInput.value = emp.name;
                                hiddenHeadId.value = emp.employeeId;
                                suggestionsBox.style.display = "none";
                            });
                            suggestionsBox.appendChild(option);
                        });

                        const rect = headInput.getBoundingClientRect();
                        suggestionsBox.style.left = rect.left + "px";
                        suggestionsBox.style.top = (rect.bottom + window.scrollY) + "px";
                        suggestionsBox.style.width = rect.width + "px";
                        suggestionsBox.style.display = "block";
                    });
            });

            document.addEventListener("click", function (e) {
                if (!suggestionsBox.contains(e.target) && e.target !== headInput) {
                    suggestionsBox.style.display = "none";
                }
            });
        });
    </script>
}
