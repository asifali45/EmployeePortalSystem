@model EmployeePortalSystem.Models.Department

@{
    ViewData["Title"] = "Edit Department";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
    var parentDepartments = ViewBag.ParentDepartments as List<SelectListItem>;
    var headName = ViewBag.HeadName as string;
}

<div class="container">
    <div class="page-contents">
        <div class="container_emp">
            <div class="emp_btn">
                <div class="left_btn">
                    <form method="get" asp-action="Index" asp-controller="Departments">
                        <button type="submit" class="create_emp_btn">Back</button>
                    </form>
                </div>
            </div>
            <div class="emp_head">
                <h2>Edit Department</h2>
            </div>
        </div>

        <div class="container_emp mb-20">
            <div class="empmaster_card">
                <form asp-action="Edit" asp-controller="Departments" method="post" class="emp_form">
                    <input type="hidden" asp-for="DepartmentId" />

                    <div class="form_row">
                        <div class="form_group">
                            <label>Department Name</label>
                            <input asp-for="Name" class="form-control" placeholder="Enter the Department Name here" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form_group">
                            <label>Description</label>
                            <input asp-for="Description" class="form-control" placeholder="Enter the description" maxlength="250" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form_row">
                        <div class="form_group" style="position: relative;">
                            <label>Head Name</label>
                            <input type="text" id="headName" value="@headName" class="form-control" placeholder="Type to search Head Name" autocomplete="off" />
                            <input type="hidden" id="HeadId" name="HeadId" value="@Model.HeadId" />
                            <div id="headSuggestions" style="border: 1px solid #ccc; display:none; position:absolute; background:white; z-index:1000; max-height:150px; overflow-y:auto;"></div>
                            <span asp-validation-for="HeadId" class="text-danger"></span>
                        </div>


                        <div class="form_group">
                            <label>Parent Department</label>
                            <select asp-for="ParentDepartmentId" asp-items="parentDepartments" class="form-control">
                                <option value="">-- Select Parent Department --</option>
                            </select>
                            <span asp-validation-for="ParentDepartmentId" class="text-danger"></span>
                        </div>
                    </div>


                    <div class="form_row">
                        <button type="submit" class="custom-button">Save</button>
                        <button type="reset">Cancel</button>
                    </div>

                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-success mt-2">
                            @TempData["Message"]
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const headInput = document.getElementById("headName");
            const hiddenHeadId = document.getElementById("HeadId");
            const suggestionsBox = document.getElementById("headSuggestions");

            headInput.addEventListener("input", function () {
                const query = headInput.value.trim();
                if (query.length < 1) {
                    suggestionsBox.style.display = "none";
                    return;
                }

                fetch(`/Departments/SearchEmployees?term=${encodeURIComponent(query)}`)
                    .then(res => res.json())
                    .then(data => {
                        suggestionsBox.innerHTML = "";

                        if (data.length === 0) {
                            suggestionsBox.style.display = "none";
                            return;
                        }

                        data.forEach(emp => {
                            const option = document.createElement("div");
                            option.textContent = emp.name;
                            option.style.padding = "5px";
                            option.style.cursor = "pointer";
                            option.addEventListener("click", () => {
                                headInput.value = emp.name;
                                hiddenHeadId.value = emp.employeeId;
                                suggestionsBox.style.display = "none";
                            });
                            suggestionsBox.appendChild(option);
                        });

                                const rect = headInput.getBoundingClientRect();
                                const scrollTop = window.scrollY || document.documentElement.scrollTop;
                                const scrollLeft = window.scrollX || document.documentElement.scrollLeft;

                                suggestionsBox.style.position = "absolute";
                                suggestionsBox.style.left = `${headInput.offsetLeft}px`;
                                suggestionsBox.style.top = `${headInput.offsetTop + headInput.offsetHeight}px`;
                                suggestionsBox.style.width = `${headInput.offsetWidth}px`;
                                suggestionsBox.style.display = "block";
                        
                    })
                    .catch(err => {
                        console.error("Autocomplete fetch failed:", err);
                    });
            });

            document.addEventListener("click", function (e) {
                if (!suggestionsBox.contains(e.target) && e.target !== headInput) {
                    suggestionsBox.style.display = "none";
                }
            });
        });
    </script>
}





